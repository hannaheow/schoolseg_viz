---
title: "Visualizing School Segregation"
author: "HOW"
format: html
editor: visual
---

## 

```{r load data}
library(readr)
data2022 <- read_csv("national_data/analytic_data2022.csv")
data2025 <- read_csv("national_data/analytic_data2025.csv")

data2022$schoolseg22 = as.numeric(data2022$`School segregation raw value`)
data2025$schoolseg25 = as.numeric(data2025$`School Segregation raw value`)
data2022$schoolseg22_cilow = as.numeric(data2022$`School segregation CI low`)
data2025$schoolseg25_cilow = as.numeric(data2025$`School Segregation CI low`)
data2022$schoolseg22_cihigh = as.numeric(data2022$`School segregation CI high`)
data2025$schoolseg25_cihigh = as.numeric(data2025$`School Segregation CI high`)


dtot = merge(data2022, data2025, by = "5-digit FIPS Code")

dtot$sigchange <- with(dtot, 
                       schoolseg22 < schoolseg25_cilow | schoolseg22 > schoolseg25_cihigh)


dtot$schoolseg_change = dtot$schoolseg25 - dtot$schoolseg22

```

```{r make map of schoolseg_change}
# Load necessary libraries
library(tidyverse)
library(tigris)      # for county shapefiles
library(sf)          # for working with spatial data
library(ggplot2)     # for plotting
library(viridis)     # for color scale

# Optionally, set options to cache shapefiles
options(tigris_use_cache = TRUE)

# Get U.S. counties shapefile
counties_sf <- counties(cb = TRUE, resolution = "5m", class = "sf") %>%
  mutate(FIPS = paste0(STATEFP, COUNTYFP))

# Make sure the FIPS codes in your data match the shapefile format
dtot <- dtot %>%
  rename(FIPS = `5-digit FIPS Code`) %>%
  mutate(FIPS = str_pad(FIPS, width = 5, pad = "0"))

# Join data to spatial shapefile
map_data <- counties_sf %>%
  left_join(dtot, by = "FIPS")



# Add coord_sf with a projection
ggplot(map_data) +
  geom_sf(aes(fill = schoolseg_change), color = "grey70", size = 0.01) +
  scale_fill_viridis_c(option = "plasma", na.value = "grey90", name = "Change in\nSchool Segregation") +
  coord_sf(crs = 5070) +  # Albers Equal Area for US
  theme_minimal() +
  labs(title = "Change in School Segregation by U.S. County") +
  theme(
    axis.text = element_blank(),
    axis.ticks = element_blank(),
    panel.grid = element_blank(),
    legend.key.size = unit(0.5, "cm"),
    legend.text = element_text(size = 8),
    legend.title = element_text(size = 9)
  )
# positive means that there is MORE segregation in 2025 than in 2022
# negative means that there is LESS segregation in 2025 than in 2022 


```

```{r}
dtot_bigchange = dtot %>% filter(abs(schoolseg_change)>0.03 ) %>% select(FIPS, `State Abbreviation.x`, Name.x, schoolseg22, schoolseg25, schoolseg_change)

# need some sort of story here..... 

```

```{r}
# Create a categorical variable for fill
map_data <- map_data %>%
  mutate(
    schoolseg_bin = case_when(
      schoolseg_change > 0.01  ~ "Increase",
      schoolseg_change < -0.01 ~ "Decrease",
      TRUE ~ NA_character_
    )
  )

# Plot binary map
ggplot(map_data) +
  geom_sf(aes(fill = schoolseg_bin), color = "grey70", size = 0.01) +
  scale_fill_manual(
    values = c("Increase" = "purple", "Decrease" = "green"),
    na.value = "grey90",
    name = "Change in School Segregation from 2020 to 2023"
  ) +
  coord_sf(crs = 5070) +
  theme_minimal() +
  labs(title = "") +
  theme(
    axis.text = element_blank(),
    axis.ticks = element_blank(),
    panel.grid = element_blank(),
    legend.key.size = unit(0.5, "cm"),
    legend.text = element_text(size = 8),
    legend.title = element_text(size = 9)
  )

```

```{r side by side histograms of sfa by change in school seg}
# Remove NAs in the bin variable for plotting
filtered_data <- map_data %>%
  filter(!is.na(schoolseg_bin)) %>% 
  mutate(sfa = as.numeric(`School funding adequacy raw value`),
         pop = as.numeric(`Population raw value.y`))

# Create side-by-side histograms using facet_wrap
ggplot(filtered_data, aes(x = sfa)) +
  geom_histogram(binwidth = 500, fill = "steelblue", color = "white") +
  facet_wrap(~schoolseg_bin, scales = "free_y") +
  labs(
    title = "Distribution of School Funding Adequacy\n by Change in School Segregation",
    x = "School Funding Adequacy (Raw Value)",
    y = "Count"
  ) +
  theme_minimal()



# Plot
ggplot(filtered_data, aes(
  x = schoolseg_bin,
  y = sfa
)) +
  # Add boxplot first so it's underneath the points
  geom_boxplot(
    width = 0.6,
    outlier.shape = NA, # Hides outliers since we show all points with jitter
    alpha = 1,
    #fill = "",
    color = "blue",
    size = 1
  ) +
  geom_jitter(aes(size = pop),  # Replace with a real variable like population
              width = 0.2, alpha = 0.5, shape = 21,
              stroke = 0.2, color = "black") +
  scale_size_continuous(range = c(1, 10)) +
  scale_y_continuous(labels = scales::dollar_format()) +
  labs(
    title = "School Funding Adequacy \nby Change in Segregation from 2022 to 2025",
    y = "School Funding Adequacy",
    x = NULL
  ) +
  theme_minimal(base_size = 14) +
  theme(
    legend.position = "none",
    plot.title = element_text(face = "bold")
  )
```

```{r state level w sfa as binary x axis }


# Create binary SFA category
state_data <- data2025 %>%
  filter(`County FIPS Code` == "000") %>%
  filter(`State FIPS Code` != "00") %>% 
  mutate(
    sfa = as.numeric(`School Funding Adequacy raw value`),
    pop = as.numeric(`Population raw value`),
    schoolseg25 = as.numeric(schoolseg25),
    sfa_bin = ifelse(sfa > 0, "Adequate Funding", "Inadequate Funding")
  ) %>%
  filter(!is.na(sfa_bin), !is.na(schoolseg25))

# Plot with sfa_bin on x-axis and schoolseg25 on y-axis
ggplot(state_data, aes(
  x = sfa_bin,
  y = schoolseg25
)) +
  # Add boxplot
  geom_boxplot(
    width = 0.3,
    outlier.shape = NA,
    alpha = 0.2,
    fill = NA,
    size = 1,
    color = "grey"
  ) +
  # Add state abbreviation text labels
  geom_text(
    aes(label = `State Abbreviation`),
    position = position_jitter(width = 0.15, height = 0),
    fontface = "bold",
    color = "black",
    alpha = 0.5
  ) +
  labs(
  title = "State-Level School Segregation\n by School Funding Adequacy",
  caption = paste(
    "",
    "\nThe School Segregation Index ranges from 0 to 1.",
    "Lower values indicate student bodies that reflect the racial and ethnic composition of the county.",
    "Higher values indicate greater segregation in schools.",
    "",
    "States with inadequate school funding tend to have higher",
    "median segregation levels than states with adequate funding.",
    sep = "\n"
  ),
  y = "School Segregation",
  x = NULL
)+
  theme_minimal(base_size = 14) +
  theme(
    plot.title = element_text(face = "bold", hjust = 0),
    plot.caption = element_text(hjust = 0),
    plot.title.position = "plot",
    plot.caption.position = "plot"
  )


```

```{r experimenting with sfa, school seg, and LE}
cdat = data2025 %>% filter(`County FIPS Code` != "000") %>% 
  mutate(sfa = as.numeric(`School Funding Adequacy raw value`), 
         mhi = as.numeric(`Median Household Income raw value`),
         le = as.numeric(`Life Expectancy raw value`),
         sfabin = ifelse(sfa > 0, "Adequate Funding", "Inadequate Funding")) %>% filter(!is.na(sfabin))

ggplot(data = cdat, aes(x = schoolseg25, y = le, color = sfabin)) +
  geom_point(size = 3, alpha = 0.7) +
  geom_smooth(method = "lm", se = FALSE, size = 1.2) +
  scale_color_manual(
    values = c("Adequate Funding" = "#1b9e77", "Inadequate Funding" = "#d95f02"),
    name = "School Funding Adequacy"
  ) +
  labs(
    title = "Life Expectancy vs. School Segregation by Funding Adequacy",
    x = "Index of School Segregation (2025)",
    y = "Life Expectancy",
    color = "School Funding Adequacy"
  ) +
  theme_minimal(base_size = 14) +
  theme(
    plot.title = element_text(face = "bold", hjust = 0.5),
    legend.title = element_text(face = "bold"),
    legend.position = "top"
  )

```
